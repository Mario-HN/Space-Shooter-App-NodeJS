1) Porque em um sistema multiusuário implementado em Node.JS é importante evitar o uso
de chamadas de I/O bloqueantes?


Uma chamada I/O (entrada/saída) bloqueante é uma operação de E/S que impede o processamento continuo do 
programa até que a operação seja concluída. Em outras palavras, a thread que está realizando a chamada bloqueia 
e aguarda até que a operação seja concluída antes de continuar sua execução.

Isso significa que se uma operação de E/S bloqueante é realizada, o sistema operacional não pode executar qualquer 
outra tarefa até que a operação seja concluída.

Em contraste, as chamadas de I/O não-bloqueadas permitem que o programa continue sua execução, mesmo que a operação 
de E/S ainda esteja em andamento. Quando a operação é concluída, o programa é notificado e pode processar os resultados 
da operação.